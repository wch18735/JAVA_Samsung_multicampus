

<조건문>
- 조건에 따라 실행할 문장들을 제어하는 역할.
- 반드시 메소드내에 기술.

1. if문(나홀로 if문)
 형식)
   if(조건식){//조건식(conditions): boolean데이터!! 
            //--->  true,false,논리변수명,비교연산자,논리연산자
   
       //조건식의 결과가 참일 때 실행할 문장.
   }
   
   ---> 만약 조건식의 결과가 참일 때 실행할 문장이 한문장이라면
        영역괄호{}를 생략할 수 있다!!
        
   if(조건식1)
     S.o.p("안녕");     
     S.o.p("잘가");
    조건식1이 참일때  ---> 안녕,잘가 출력
    조건식1이 거짓일때  ---> 잘가 출력
   =======================  
   if(조건식2){       
     S.o.p("안녕");     
     S.o.p("잘가");
   }
    조건식2가 참일때  ---> 안녕,잘가 출력
    조건식2가 거짓일때  ---> 출력 없음
   
2. if~else문 (양자택일 조건검사)
   형식)
   
   if(조건식){
         조건식의 결과가 참일때 실행할 문장
   }else{
        조건식의 결과가 거짓일때 실행할 문장
   }

   
3. switch~case문
  형식)
  
   switch(수식){//수식: 정수데이터(byte,short,int),문자(char)
               //JDK7버전이후부터 String데이터가 포함
      case 비교값1: 실행할 문장1;
      case 비교값2: 실행할 문장2;
      case 비교값3: 실행할 문장3;
      case 비교값4: 실행할 문장4;
      
      default: 일치하는 case값이 없을 때 실행할 기본문장;
   }

문제) 다음 점수에 해당하는 학점을 화면에 출력하시오.
  int jumsu=85;
  ----> 출력값: B학점입니다!!
  
  jumsu(가정: 0~100의 정수값)
  ------------------------
  90~100     A학점
  80~89      B학점
  70~79      C학점
  60~69      D학점
  0~59       F학점
  ------------------------
  class명: HakjumTest.java (switch~case사용)    



4. if~else if~else문
  - 서로 연결된 조건식을 표현할 때 사용
  - 필터링, 수의 범위를 표현하기에 적절함.

  형식)
  
    if(조건식1){  //su>10
      //조건식1 결과가 참일 때 실행할 문장;    
    }else if(조건식2){
      //조건식1 결과가 거짓이고  조건식2 결과가 참일때 실행할 문장
    }else if(조건식3){
      //조건식1,2 결과가 거짓이고  조건식3 결과가 참일때 실행할 문장
    }else{
      //조건식1,2,3 결과가 거짓일때 실행할 문장 (switch~case의 default)
    }

===========================================================
<클래스의 구성>
---> (클래스==자바프로그램 파일)

class 클래스명
{
   ---> 변수선언
     자료형 변수명;
   
   ---> 메소드정의
     리턴형 메소드명(매개변수 선언)
   {
     ---> 변수선언
     ---> 변수초기화
     ---> 메소드 호출 ★
     ---> 조건문,반복문
   }
}

===========================================================
<반복문> Loop
1.for문
 - 일정횟수 반복할 때 사용.
 - 규칙적인 수를 표현할 때 사용.
 - 배열(ArrayList)의 인덱스를 표현할 때 사용.
 
 형식)
 
 for(초기화1; 조건식2; 증감연산자3)
 {
   //반복적으로 실행할 문장4;
 }
 
 실행순서)
          1 - 2(true) - 4 - 3
            - 2(true) - 4 - 3
            - 2(true) - 4 - 3
            - 2(true) - 4 - 3
            - 2(false) : for문 탈출!!

 적용예)
 
  for(int i=1; i<=3; i++ ){ //i=1,2,3
   System.out.println("안녕~!!");
  }

※print()메소드와 println()메소드 차이

  System.out.print(데이터);  
   기능-> 1. 데이터출력
   
  System.out.print();  ---> 에러발생: 출력할 데이터가 없기 때문 
   
  
  System.out.println(데이터);
   기능-> 1. 데이터출력
       2. 줄바꿈 (ln: line new)
  
  System.out.println(); ---> 데이터 출력없이 라인만 변경기능.
  
  System.out.print("대한");       
  System.out.print("민국");  
  ==> 대한민국     

  System.out.println("대한");       
  System.out.println();       
  System.out.println("민국");  
  ==> 대한
  
           민국


문제1) 화면에 다음과 같이 출력하시오.(for문 사용)
  1 
  2
  3
  4
  5  
문제2) 화면에 다음과 같이 출력하시오.(for문 사용)  
  1 2 3 4 5  
  
문제3) 화면에 다음과 같이 출력하시오.(for문 사용)
  5 4 3 2 1
  
문제4) 화면에 다음과 같이 출력하시오.(for문 사용)
  3 6 9 12
  
문제5) 화면에 다음과 같이 출력하시오.(for문 사용)  
  [5, 10, 15, 20]
  

2.while문
3.do~while문










