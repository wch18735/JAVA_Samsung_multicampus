
<생성자>Constructor
- 새로운 객체를 생성하기 위해 초기화 해주는 메소드.
규칙)
  1. 생성자의 이름은 반드시 클래스명과 일치.(대소문자까지 일치)
  2. 리턴자료형이 없다.(리턴자료형을 명시하지 않는다)
  
  3. 객체가 생성시 자동으로 호출.
  4. default생성자를 자바컴파일러가 컴파일시 자동으로 추가.
    -------------
      인자가 없는 생성자!!
     
     ===> 클래스내에 생성자가 한개도 존재하지 않을때!! 
    

class Abc{
   //멤버변수(필드)는 기본값이 존재(정수:0, 실수:0.0, 논리:false, 클래스:null)
   int su;//int su=0;
   A a;   //A a=null;
    
   Abc()  //기본생성자
   {
     //초기화(값할당) 코드, 선행작업
     su=10;
     a=new A();
   }
   
   
   Abc(String name){ //오버로딩 생성자
   
   
   }
     
   Abc(int su){ //오버로딩 생성자
      this.su   =  su;
      -------      ---
           멤버변수            매개변수(지역변수)
   }
   
   void hello(){} 
   
   void goodBye(){
      hello();
      
      this.hello();
      System.out.println(su);
      System.out.println(this.su);
   }
   
   

}//class Abc

--------------main---------------3. 객체가 생성시 자동으로 호출.
     Abc abc = new Abc();
                  -------
                                생성자 호출!!
           
       abc.hello();
       
     Abc abc2 = new Abc(20);  
         System.out.println(abc2.su); //?
     
     
---------------------------------




--------------------------------------------------------
  
<this>(자기참조연산자) == 현재위치의 자기 클래스를 표현!!
- 메소드내에서 사용
- 객체생성자내에서 다른 생성자를 호출시 사용.
- 매개변수명과 멤버변수명이 동일할때
  이를 구분하기 위해서 자신의 변수(멤버변수) 앞에 this를 사용.
  
형식)
   this.필드명
   this.메소드명()
   this(매개변수)    : 다른 생성자를 호출
   
참고)
   super.필드명
   super.메소드명()
   super(매개변수)    : 부모의 생성자를 호출
      
===========================================================
<접근제한자> Access Control
1. public      - 모든(서로다른) 패키지에서 접근 가능(허용)
2. protected   - 같은 패키지에서 접근 가능
                                단, 다른 패키지라도 상속관계(자식클래스)에 있었을 때는 접근가능.
3. default(생략)- 같은 패지지에서 접근 가능
4. private     - 같은 클래스(멤버끼리)내에서 접근 가능


[public/생략] [final/abstract] class 클래스명{

 [접근제한자4] [수정자] 자료형 변수명;

   생성자명(){
  
  }

 [접근제한자4] [수정자] 리턴형 메소드명()
   {
   
   }

}

------------------------------------------------

class A{

}

==> 위의 A클래스에 생략된(default) 부분은 어떤 것이 있을까요?

import java.lang.*;

class A extends Object{
  A(){}
}
------------------------------------------------
package 현클래스의 소속패키지명;

import 현클래스에서 사용하고자하는 클래스의 소속;

public class  클래스명 extends 부모클래스명{
    //변수선언
    //생성자 정의
    //메소드 정의
}

================================================
문제1) 아래와 같이 화면에 출력하는 프로그램을 작성하시오.
      (구구단 3단을 출력하시오.)  Gugudan.java

3*1=3      
3*2=6      
.....      
3*8=24      
3*9=27
      
문제2) 아래와 같이 화면에 출력하는 프로그램을 작성하시오.
      (Gugudan2.java)

#구구단 출력#
시작단? 3
끝단? 6

<3단>
3*1=3      
3*2=6      
.....      
3*8=24      
3*9=27      

<4단>
....

<5단>
....

<6단>
6*1=6
6*2=12
....
6*8=48
6*9=54

------------------------------------------------
<자바의 입력> - 프로그램 실행 도중 원하는 시점에서 입력!!
1. byte단위의 입력

   System.in.read();
   ---------
   표준입력장치: 키보드

   - 숫자입력(한자리 수)
     int su =        System.in.read()-48;
     
                                          키보드       리턴값(아스키ASCII숫자코드값)
                         0      48                 
                         1      49
                         2      50
                         9      57
     
   - 문자입력(한 문자)
     char ch = (char)System.in.read();
     
                                           키보드       리턴값(아스키ASCII숫자코드값)
                         a      97                 
                         b      98
                         A      65
                         B      66
                         
                     (char)97 ----> 'a'    
     
     
     
     























































   
   
   
      